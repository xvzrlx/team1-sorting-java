package ru.team1.sorting;

import java.util.Scanner;

public class Main {
    private static final Scanner scanner = new Scanner(System.in);
    private static boolean dataLoaded = false;

    public static void main(String[] args) {
        System.out.println("Sorting App");

        while (true) {
            showMainMenu();
            int choice = getIntInput();

            switch (choice) {
                case 1 -> handleDataLoading();
                case 2 -> handleDataAdding();
                case 3 -> handleSearch();
                case 4 -> handleSorting();
                case 0 -> {
                    System.out.println("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!");
                    return;
                }
                default -> System.out.println("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
            }
        }
    }

    private static void showMainMenu() {
        System.out.println("\n=== –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===");
        System.out.println("1. –ó–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ");
        System.out.println("2. –î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ");
        System.out.println("3. –ù–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç");
        System.out.println("4. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞");
        System.out.println("0. –í—ã—Ö–æ–¥");
        System.out.print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ");
    }

    private static void handleDataLoading() {
        System.out.println("\n--- –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö ---");
        System.out.println("1. –ò–∑ —Ñ–∞–π–ª–∞");
        System.out.println("2. –†–∞–Ω–¥–æ–º");
        System.out.println("3. –í—Ä—É—á–Ω—É—é");
        System.out.println("4. Stream");
        System.out.print("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±: ");
        int choice = getIntInput();

        switch (choice) {
            case 1 -> {
                System.out.println("üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑ —Ñ–∞–π–ª–∞");
                dataLoaded = true;
            }
            case 2 -> {
                System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä: ");
                int size = getIntInput();
                System.out.println("üé≤ –†–∞–Ω–¥–æ–º–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è");
                dataLoaded = true;
            }
            case 3 -> {
                System.out.println("‚úçÔ∏è –†—É—á–Ω–æ–π –≤–≤–æ–¥");
                dataLoaded = true;
            }
            case 4 -> {
                System.out.println("üåä –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ Stream");
                dataLoaded = true;
            }
            default -> System.out.println("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.");
        }
    }

    private static void handleDataAdding() {
        System.out.println("‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö");
    }

    private static void handleSearch() {
        if (!dataLoaded) {
            System.out.println("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏—é.");
            return;
        }
        System.out.println("\n--- –ü–æ–∏—Å–∫ ---");
        System.out.println("1. –ë–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫");
        System.out.println("2. –ü–æ–∏—Å–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É");
        System.out.print("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞: ");
        int choice = getIntInput();

        switch (choice) {
            case 1 -> {
                System.out.println("–ë–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫");
            }
            case 2 -> {
                System.out.println("–ü–æ–∏—Å–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É");
            }
            default -> System.out.println("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.");
        }
    }

    private static void handleSorting() {
        if (!dataLoaded) {
            System.out.println("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏—é.");
            return;
        }
        System.out.println("\n--- –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ ---");
        System.out.println("1. –ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é");
        System.out.println("2. –ü–æ –≥–æ–¥—É");
        System.out.println("3. –ü–æ –≥–æ–¥—É (—Ç–æ–ª—å–∫–æ —á—ë—Ç–Ω—ã–µ)");
        System.out.print("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏: ");
        int choice = getIntInput();

        switch (choice) {
            case 1 -> {
                System.out.println("üî§ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é");
            }
            case 2 -> {
                System.out.println("üìÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≥–æ–¥—É");
            }
            case 3 -> {
                System.out.println("üî¢ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≥–æ–¥—É (—Ç–æ–ª—å–∫–æ —á—ë—Ç–Ω—ã–µ)");
            }
            default -> System.out.println("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.");
        }
    }

    private static int getIntInput() {
        while (true) {
            try {
                return Integer.parseInt(scanner.nextLine().trim());
            } catch (NumberFormatException e) {
                System.out.print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ");
            }
        }
    }
}